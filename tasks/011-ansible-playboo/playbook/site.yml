---
- name: Install Clickhouse
  hosts: clickhouse
  remote_user: centos
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  remote_user: centos
  become: true
  become_method: sudo
  handlers:
    - name: Restart Vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-1.x86_64.rpm"
        dest: "/tmp/vector-latest.rpm"

    - name: Install Vector
      ansible.builtin.yum:
        name:
          - "/tmp/vector-latest.rpm"
        state: present

    - name: Deploy Vector configuration
      vars:
        log_level: debug
        data_dir: "/var/data/vector/"
        sources:
          - name: app_1_source
            type: file
            path: "/var/log/app_1.log"
          - name: app_2_source
            type: file
            path: "/var/log/app_2.log"
        sinks:
          - name: log
            type: console
            path: "/var/log/app_1.log"
            inputs:
              - app_1_source
          - name: file
            type: file
            path: "/var/log/vector/app_2_transformed.log"
            inputs:
              - app_2_source
      ansible.builtin.template:
        src: vector.conf.j2
        dest: /etc/vector/vector.conf
      notify: Restart Vector service

    - name: Start Vector service
      ansible.builtin.service:
        name: vector
        state: started
        enabled: yes
